{"version":3,"sources":["components/tile.jsx","components/grid.jsx","action-scripts/actions.js","app.jsx","serviceWorker.js","index.js"],"names":["Tile","state","classNames","map","m","props","value","className","this","dynamicClass","Component","Grid","grid","r","i","key","c","j","renderGrid","randomTileGenerate","array","data","randomNum","Math","floor","random","length","coordinate","push","calculateMove","row","direction","merged","local","result","score","unshift","final","filter","merge","newArray","Array","fill","concat","rotateArray","App","win","handleKeyEvent","resetGame","first","Random","setState","totalMove","move","calculateWin","rotate","calculated","won","some","n","mapKeys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","window","addEventListener","e","console","log","onClick","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a358d137.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Tile extends Component {\r\n  state = {};\r\n\r\n  dynamicClass() {\r\n    let classNames = \"d-flex justify-content-center align-items-center\";\r\n    let define = [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048];\r\n    define.map(m => {\r\n      if (this.props.value === m) {\r\n        classNames += ` tile color-${m}`;\r\n      }\r\n      return \"\";\r\n    });\r\n    return classNames;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.dynamicClass()}>\r\n        <p>{this.props.value}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tile;\r\n","import React, { Component } from \"react\";\r\nimport Tile from \"./tile\";\r\nclass Grid extends Component {\r\n  state = {};\r\n\r\n  renderGrid() {\r\n    let grid = [...this.props.grid];\r\n    return grid.map((r, i) => {\r\n      return (\r\n        <div className=\"d-flex justify-content-center\" key={i}>\r\n          {r.map((c, j) => {\r\n            if (c > 0) {\r\n              return (\r\n                <div className=\"cell\" key={j}>\r\n                  <Tile value={c} />\r\n                </div>\r\n              );\r\n            } else {\r\n              return <div className=\"cell\" key={j}></div>;\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"grid\">{this.renderGrid()}</div>;\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","function randomTileGenerate(array) {\r\n  let grid = [...array];\r\n  let data = [2, 4];\r\n  let randomNum = data[Math.floor(Math.random() * data.length)];\r\n  let coordinate = [];\r\n\r\n  for (let r = 0; r < grid.length; r++) {\r\n    for (let c = 0; c < grid[r].length; c++) {\r\n      if (grid[r][c] === 0) {\r\n        coordinate.push([r, c]);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (coordinate.length > 0) {\r\n    let [r, c] = coordinate[Math.floor(Math.random() * coordinate.length)];\r\n    grid[r][c] = randomNum;\r\n  } else {\r\n    return grid;\r\n  }\r\n\r\n  return grid;\r\n}\r\n\r\nfunction merge(row, direction) {\r\n  let local = [...row];\r\n  let result = [];\r\n  let score = 0;\r\n\r\n  if (direction === \"right\" || direction === \"top\") {\r\n    //Right side merging\r\n    for (let i = local.length - 1; i >= 0; i--) {\r\n      if (local[i] && local[i - 1] && local[i] === local[i - 1]) {\r\n        result.unshift([local[i], local[i - 1]]);\r\n        local[i - 1] = 0;\r\n      } else if (local[i]) {\r\n        result.unshift([local[i]]);\r\n      }\r\n    }\r\n  } else if (direction === \"left\" || direction === \"bottom\") {\r\n    //Left side merging\r\n    for (let i = 0; i < local.length; i++) {\r\n      if (local[i] && local[i + 1] && local[i] === local[i + 1]) {\r\n        result.push([local[i], local[i + 1]]);\r\n        local[i + 1] = 0;\r\n      } else if (local[i]) {\r\n        result.push([local[i]]);\r\n      }\r\n    }\r\n  }\r\n\r\n  let final = [];\r\n  result.map((m, i) => {\r\n    if (m.length > 1) {\r\n      final.push(m[0] + m[1]);\r\n      score += m[0] + m[1];\r\n    }\r\n    if (m.length === 1) {\r\n      final.push(m[0]);\r\n    }\r\n  });\r\n  return {\r\n    result: final.filter(m => m > 0),\r\n    score\r\n  };\r\n}\r\n\r\nfunction calculateMove(row, direction) {\r\n  let filtered = [...row].filter(m => m > 0);\r\n  let merged = merge(filtered, direction);\r\n\r\n  let newArray = Array(row.length - merged.result.length).fill(0);\r\n\r\n  if (direction === \"right\" || direction === \"top\") {\r\n    return {\r\n      result: newArray.concat(merged.result),\r\n      score: merged.score\r\n    };\r\n  } else if (direction === \"left\" || direction === \"bottom\") {\r\n    return {\r\n      result: merged.result.concat(newArray),\r\n      score: merged.score\r\n    };\r\n  }\r\n}\r\n\r\nfunction rotateArray(array) {\r\n  //three time calling this function will create original state of the grid\r\n\r\n  let local = [...array];\r\n  let result = [];\r\n\r\n  //rotation happens here\r\n  for (let i = 0; i < local.length; i++) {\r\n    let r = [];\r\n    for (let j = 0; j < local[i].length; j++) {\r\n      r.unshift(local[j][i]);\r\n    }\r\n    result.push(r);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport { randomTileGenerate as Random, calculateMove, rotateArray };\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"./components/grid\";\r\nimport { Random, calculateMove, rotateArray } from \"./action-scripts/actions\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    //[[13, 9, 5, 1], [14, 10, 6, 2], [15, 11, 7, 3], [16, 12, 8, 4]]\r\n    //[[1,2,3,4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]\r\n    //[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\r\n    //Array(4).fill(Array(4).fill(0)),\r\n    grid: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\r\n    score: 0,\r\n    win: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleKeyEvent();\r\n    this.resetGame();\r\n  }\r\n\r\n  resetGame() {\r\n    let grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\r\n    let first = Random(grid);\r\n    let final = Random(first);\r\n    this.setState({\r\n      grid: final,\r\n      score: 0,\r\n      win: false\r\n    });\r\n  }\r\n\r\n  move(direction) {\r\n    let grid = [...this.state.grid];\r\n    let totalMove = this.state.totalMove;\r\n    let score = this.state.score;\r\n    let result = [];\r\n\r\n    if (direction === \"left\" || direction === \"right\") {\r\n      for (let i = 0; i < grid.length; i++) {\r\n        let move = calculateMove(grid[i], direction);\r\n        result.push(move.result);\r\n        score += move.score;\r\n      }\r\n\r\n      let final = Random(result);\r\n      totalMove += 1;\r\n      this.setState({\r\n        grid: final,\r\n        totalMove,\r\n        score,\r\n        win: this.calculateWin()\r\n      });\r\n    } else if (direction === \"top\" || direction === \"bottom\") {\r\n      let rotate = rotateArray(grid);\r\n      let calculated = [];\r\n      for (let i = 0; i < grid.length; i++) {\r\n        let move = calculateMove(rotate[i], direction);\r\n        calculated.push(move.result);\r\n        score += move.score;\r\n      }\r\n      let final = rotateArray(calculated);\r\n      final = rotateArray(final);\r\n      final = Random(rotateArray(final));\r\n      this.setState({\r\n        grid: final,\r\n        score,\r\n        win: this.calculateWin()\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateWin() {\r\n    let won = false;\r\n    this.state.grid.map(m => {\r\n      if (m.some(n => n === 2048)) {\r\n        won = true;\r\n      }\r\n    });\r\n\r\n    return won;\r\n  }\r\n\r\n  handleKeyEvent() {\r\n    let mapKeys = {\r\n      ArrowUp: \"top\",\r\n      ArrowDown: \"bottom\",\r\n      ArrowLeft: \"left\",\r\n      ArrowRight: \"right\"\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", e => {\r\n      if (e.key in mapKeys) {\r\n        this.move(mapKeys[e.key]);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.grid);\r\n    return (\r\n      <div className=\"app d-flex justify-content-center align-items-center flex-column\">\r\n        <div className=\"game-heading badge badge-dark mb-4\">2048 Game</div>\r\n        <div className=\"game-info d-flex justify-content-between mb-1\">\r\n          <div\r\n            className={\r\n              this.state.win ? \"badge game-data-won\" : \"badge game-data\"\r\n            }\r\n          >\r\n            {this.state.win ? \"Game won!!\" : \"Game is running\"}\r\n          </div>\r\n          <div className=\"game-action badge\">\r\n            <div className=\"game-reset badge\" onClick={() => this.resetGame()}>\r\n              <i className=\"fa fa-refresh fa-spin\"></i>\r\n            </div>\r\n          </div>\r\n          <div className=\"game-score badge badge-primary\">\r\n            <p className=\"p-0 m-0\">Score : {this.state.score}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid-wrap mt-1\">\r\n          <Grid grid={this.state.grid} />\r\n        </div>\r\n\r\n        <div className=\"btn-group d-flex flex-column justify-content-center mt-3\">\r\n          <p className=\"key-direction w-100 text-center mb-1 mt-0\">\r\n            Use arrow keys (UP, DOWN, LEFT, RIGHT) or below buttons for\r\n            movement.\r\n          </p>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <button\r\n              className=\"btn btn-sm w-100\"\r\n              onClick={() => this.move(\"top\")}\r\n            >\r\n              UP\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"d-flex justify-content-between mt-2 mb-2\">\r\n            <button\r\n              className=\"btn btn-sm w-50 mr-1\"\r\n              onClick={() => this.move(\"left\")}\r\n            >\r\n              LEFT\r\n            </button>\r\n            <button\r\n              className=\"btn btn-sm  w-50 ml-1\"\r\n              onClick={() => this.move(\"right\")}\r\n            >\r\n              RIGHT\r\n            </button>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <button\r\n              className=\"btn btn-sm w-100\"\r\n              onClick={() => this.move(\"bottom\")}\r\n            >\r\n              DOWN\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.scss\";\nimport App from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.register();\n"],"sourceRoot":""}